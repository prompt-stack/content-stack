{
  "course": {
    "title": "Computer Science for Non-Technical Users",
    "subtitle": "Learn CS fundamentals to effectively use AI tools for building automations, prototypes, and applications",
    "description": "A comprehensive course designed for non-technical users who want to understand computer science concepts to better leverage AI tools for development, automation, and product-building.",
    "version": "1.0.0",
    "lastUpdated": "2024-01-15",
    "estimatedDuration": "4-6 hours",
    "difficulty": "beginner",
    "prerequisites": "No programming background required",
    "learningObjectives": [
      "Understand abstraction and system thinking for better AI prompting",
      "Master data structures (JSON, lists, objects) for automation tools",
      "Learn API concepts for integrating AI with other services",
      "Develop mental models for client-server architecture",
      "Apply CS concepts to real-world AI and automation scenarios"
    ]
  },
  "modules": [
    {
      "id": "abstraction",
      "title": "Understanding Abstraction",
      "description": "Learn to think in layers - the foundation of system thinking",
      "icon": "layers",
      "estimatedTime": "45 minutes",
      "difficulty": "beginner",
      "order": 1,
      "sections": [
        {
          "id": "what-is-abstraction",
          "title": "What is Abstraction?",
          "type": "concept",
          "estimatedTime": "15 minutes",
          "content": {
            "introduction": "Abstraction is the foundational concept in system thinking. It means breaking down complex systems into layers, allowing you to reason about what something does without needing to immediately understand how it does it.",
            "keyPoints": [
              "Think like an engineer - abstraction helps you see systems in parts",
              "Focus on what something does rather than how it does it",
              "Essential for effective AI prompting and system design"
            ],
            "examples": [
              {
                "title": "Car Analogy",
                "description": "You press the gas pedal â†’ the car moves. You don't need to understand the engine, pistons, or combustion to drive.",
                "visual": "car-abstraction.svg"
              },
              {
                "title": "Map Analogy", 
                "description": "A subway map doesn't show real geography. It shows only the routes and stops - the complexity is abstracted into a usable model.",
                "visual": "map-abstraction.svg"
              }
            ]
          }
        },
        {
          "id": "web-abstraction-layers",
          "title": "Web Application Layers",
          "type": "interactive",
          "estimatedTime": "20 minutes",
          "content": {
            "introduction": "Most things you build - websites, tools, automations - follow a pattern. They're built in layers.",
            "layers": [
              {
                "name": "UI (User Interface)",
                "description": "What people see and click",
                "examples": ["Submit button", "Form fields", "Navigation menu"],
                "color": "#3B82F6"
              },
              {
                "name": "Components", 
                "description": "Reusable building blocks",
                "examples": ["Dropdown menu", "Chat box", "Upload form"],
                "color": "#8B5CF6"
              },
              {
                "name": "Logic",
                "description": "What happens when you interact",
                "examples": ["Form validation", "Data processing", "API calls"],
                "color": "#10B981"
              },
              {
                "name": "System Architecture",
                "description": "The big-picture plumbing",
                "examples": ["Database storage", "Email notifications", "Third-party integrations"],
                "color": "#F59E0B"
              }
            ]
          }
        },
        {
          "id": "abstraction-for-ai",
          "title": "Abstraction for AI Prompting",
          "type": "practical",
          "estimatedTime": "10 minutes",
          "content": {
            "introduction": "When working with AI assistants, you're giving instructions for each layer. With abstraction, you're speaking the AI's language.",
            "examples": [
              {
                "scenario": "Building a file upload system",
                "prompt": "I want a form (UI) that lets people upload a file (Component), and when they click submit (Logic), it saves the file to Dropbox and sends me a Slack message (Architecture).",
                "explanation": "This prompt clearly describes each layer of the system"
              },
              {
                "scenario": "Creating an automation",
                "prompt": "When user clicks the button, trigger a modal with pre-filled data and send an API request to update the backend.",
                "explanation": "Describes the interaction flow across different layers"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "data-structures",
      "title": "Data Structures",
      "description": "Learn how to organize information for AI tools and automations",
      "icon": "database",
      "estimatedTime": "60 minutes", 
      "difficulty": "beginner",
      "order": 2,
      "sections": [
        {
          "id": "data-structures-intro",
          "title": "What are Data Structures?",
          "type": "concept",
          "estimatedTime": "10 minutes",
          "content": {
            "introduction": "Data structures are ways to organize information so it can be stored, used, and passed around - like organizing groceries in a bag so you can carry them properly.",
            "keyPoints": [
              "Organization matters - don't put eggs at the bottom of the bag",
              "Different structures serve different purposes",
              "Essential for communicating with AI tools and APIs"
            ]
          }
        },
        {
          "id": "lists-arrays",
          "title": "Lists and Arrays",
          "type": "interactive",
          "estimatedTime": "12 minutes",
          "content": {
            "analogy": "A grocery list - one item after another",
            "definition": "An ordered list of items where each item has a position",
            "syntax": "[\"apple\", \"banana\", \"cherry\"]",
            "examples": [
              {
                "title": "Task List",
                "data": "[\"Write email\", \"Call client\", \"Update website\"]",
                "useCase": "Step-by-step processes"
              },
              {
                "title": "User List", 
                "data": "[\"Alice\", \"Bob\", \"Charlie\"]",
                "useCase": "Collections of similar items"
              }
            ],
            "interactive": {
              "type": "json-editor",
              "initialValue": "[\"item1\", \"item2\", \"item3\"]",
              "instructions": "Try adding or removing items from this list"
            }
          }
        },
        {
          "id": "objects-dictionaries",
          "title": "Objects and Dictionaries",
          "type": "interactive", 
          "estimatedTime": "15 minutes",
          "content": {
            "analogy": "A labeled drawer with named compartments",
            "definition": "A collection of key-value pairs where each item has a name and value",
            "syntax": "{\n  \"name\": \"Rudi\",\n  \"age\": 34,\n  \"role\": \"Founder\"\n}",
            "examples": [
              {
                "title": "User Profile",
                "data": "{\n  \"name\": \"Alice\",\n  \"email\": \"alice@example.com\",\n  \"role\": \"Designer\"\n}",
                "useCase": "Structured information about entities"
              },
              {
                "title": "Configuration Settings",
                "data": "{\n  \"theme\": \"dark\",\n  \"language\": \"en\",\n  \"notifications\": true\n}",
                "useCase": "Settings and preferences"
              }
            ],
            "interactive": {
              "type": "json-editor",
              "initialValue": "{\n  \"key\": \"value\",\n  \"number\": 42,\n  \"active\": true\n}",
              "instructions": "Try modifying the keys and values"
            }
          }
        },
        {
          "id": "json-format",
          "title": "JSON - The Universal Language",
          "type": "practical",
          "estimatedTime": "15 minutes",
          "content": {
            "introduction": "JSON (JavaScript Object Notation) is a universal format that combines lists and objects. It's how most modern systems communicate.",
            "keyPoints": [
              "Combines all data structure types",
              "Used by APIs, automation tools, and AI systems",
              "Human-readable and machine-parseable"
            ],
            "examples": [
              {
                "title": "Course Data",
                "data": "{\n  \"course\": {\n    \"title\": \"CS Fundamentals\",\n    \"modules\": [\n      {\n        \"name\": \"Abstraction\",\n        \"completed\": true\n      },\n      {\n        \"name\": \"Data Structures\", \n        \"completed\": false\n      }\n    ]\n  }\n}",
                "explanation": "Notice how this combines objects (course info) with arrays (list of modules)"
              }
            ],
            "interactive": {
              "type": "json-validator",
              "instructions": "Practice writing valid JSON structures"
            }
          }
        },
        {
          "id": "trees-graphs",
          "title": "Trees and Graphs",
          "type": "concept",
          "estimatedTime": "8 minutes",
          "content": {
            "trees": {
              "analogy": "A folder system or family tree",
              "definition": "A branching structure with parent-child relationships",
              "examples": [
                "Website navigation (Home > About > Team)",
                "File systems (Folder > Subfolder > File)",
                "Organization charts (CEO > VPs > Managers)"
              ]
            },
            "graphs": {
              "analogy": "A subway map or social network",
              "definition": "A network of connected points (nodes) with relationships (edges)",
              "examples": [
                "Social media connections",
                "Recommendation systems",
                "City road networks"
              ]
            }
          }
        }
      ]
    },
    {
      "id": "apis-communication",
      "title": "APIs and Communication",
      "description": "Understand how software talks to software",
      "icon": "network",
      "estimatedTime": "40 minutes",
      "difficulty": "beginner", 
      "order": 3,
      "sections": [
        {
          "id": "what-are-apis",
          "title": "What are APIs?",
          "type": "concept",
          "estimatedTime": "15 minutes",
          "content": {
            "analogy": "APIs are like waiters in a restaurant - you tell the waiter what you want, they bring it from the kitchen",
            "definition": "Application Programming Interface - how different software systems communicate",
            "keyPoints": [
              "You send a request with what you want",
              "The API processes your request", 
              "You get back a response with the data"
            ],
            "examples": [
              {
                "request": "Give me the weather for NYC",
                "response": "{ \"temp\": \"82Â°F\", \"forecast\": \"Sunny\" }"
              }
            ]
          }
        }
      ]
    },
    {
      "id": "client-server",
      "title": "Client vs Server",
      "description": "Understanding who does what in web applications",
      "icon": "server",
      "estimatedTime": "30 minutes",
      "difficulty": "beginner",
      "order": 4,
      "sections": [
        {
          "id": "client-server-basics",
          "title": "Client vs Server Basics",
          "type": "concept",
          "estimatedTime": "15 minutes",
          "content": {
            "introduction": "The client is what users see. The server is the brain doing work behind the scenes.",
            "client": {
              "description": "The website, form, or app on your screen",
              "examples": ["Web browser", "Mobile app", "Desktop application"]
            },
            "server": {
              "description": "Where the logic happens - saving info, running AI models, sending emails",
              "examples": ["Database operations", "File processing", "Email sending"]
            }
          }
        }
      ]
    }
  ],
  "ui": {
    "theme": {
      "primary": "#2563eb",
      "secondary": "#7c3aed", 
      "accent": "#059669",
      "text": "#1f2937",
      "background": "#ffffff",
      "surface": "#f9fafb"
    },
    "navigation": {
      "showProgress": true,
      "stickyHeader": true,
      "mobileBreakpoint": "768px"
    },
    "content": {
      "maxWidth": "1200px",
      "enableSyntaxHighlighting": true,
      "showEstimatedTime": true
    }
  },
  "features": {
    "progressTracking": true,
    "offlineSupport": false,
    "darkMode": false,
    "printFriendly": true,
    "socialSharing": false
  }
}